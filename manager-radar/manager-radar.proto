syntax = "proto3";

package radar;

option go_package = "gl.npo-its.ru/radar/proto-radar";

import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";


// Структура радара
message Radar {
  string  id = 1; // Идентификатор радара
  string name = 2; // Название радара
  double lat = 3;
  double lon = 4;
  float azimuth = 5; // Азимут
  optional string direction = 6; // Направление
  string address = 7; // Адрес
  string ip = 8; // IP-адрес
  string serial = 9; // Серийный номер
  string model = 10; // Модель радара
}

// Ответ сервиса
message RadarResponse {
  Radar radar = 1; // Ответ с радаром (при создании или обновлении)
}
// Ответ сервиса
message RadarsResponse {
  repeated Radar radars = 1; // Ответ с массивом радаров (при получении всех)
}

// Запрос на создание радара
message CreateRadarRequest {
  Radar radar = 1; // Радар для создания
}

// Запрос на обновление радара
message UpdateRadarRequest {
  string id = 1; // Идентификатор радара
  Radar radar = 2; // Обновленные данные радара
}

message RecognitionsFilter {
  repeated string sensor_ids = 1;
  double heading_from = 2;
  double heading_to = 3;
  double length_from = 4;
  double length_to = 5;
  double speed_from = 6;
  double speed_to = 7;
  int64  date_from = 8;
  int64  date_to = 9;
  string sorting = 10;        // "asc" or "desc"
  string sorting_column = 11;
}

message GetTransportObjectInfoRequest {
  int64 page = 1; // номер страницы
  int64 pageSize = 2; // кол-во объектов на странице
  RecognitionsFilter filter = 3;
}

message TransportObjectInfo {
  string id = 1;
  string sensor_id = 2;
  string origin_id = 3;
  bytes coordinates = 4; // JSON-encoded координаты
  string color = 5;
  double speed = 6;
  double heading = 7;
  double length = 8;
  int64 date = 9;
  google.protobuf.Timestamp created_at = 10;
}

message GetTransportObjectInfoResponse {
  repeated TransportObjectInfo data = 1;
  int32 page = 2;
  int32 page_size = 3;
  int64 total_items = 4;
}

// Запрос на получение информации о радаре по ID
message GetRadarRequest {
  string id = 1; // Идентификатор радара
}

// Запрос на удаление радара по ID
message DeleteRadarRequest {
  string id = 1; // Идентификатор радара
}

// Ответ с временными зонами
message TimeZonesResponse {
  repeated TimeZone time_zones = 1; // Список временных зон
}

message TimeZone {
  string id = 1;
  string full_name = 2;
  string time_zone = 3;
}

// Ответ с моделями радара
message RadarModelsResponse {
  repeated RadarModel models = 1; // Список моделей радара
}

// Структура модели радара
message RadarModel {
  string id = 1;       // Идентификатор модели
  string alias = 2;    // Алиас модели
  string model_name = 3; // Название модели
  string manufacturer = 4; // Производитель модели
}

message Device {
  string id = 1; // Идентификатор Пуида
  string name = 2; // Название Пуида
  string address = 3; // Адрес
  double lat = 4;  // Широта
  double lon = 5; // Долгота
  string serial = 6; // Серийный номер
  google.protobuf.Timestamp production_date = 7; // Дата производства
  optional string note = 8; // Примечание
}

message DeviceResponse {
  Device device = 1;
}

message UpdateDeviceRequest {
  Device device = 1;
}

message ExportTypeParam {
  string field = 1;
  bool required = 2;
}

message ExportType {
  string id = 1;
  string full_name = 2;
  repeated ExportTypeParam parameters = 3;
}

message GetExportTypesResponse {
  repeated ExportType types = 1;
}

message ExportStatus {
  string id = 1;
  string full_name = 2;
}

message GetExportStatusesResponse {
  repeated ExportStatus statuses = 1;
}

// Структура экспорта
message Export {
  string  id = 1;
  string name = 2;
  string export_type = 3;
  int32 interval = 4;
  optional string host = 5;
  optional int32 port = 6;
  optional string login = 7;
  optional string password = 8;
}

message ListExport {
  string  id = 1;
  string name = 2;
  string export_type = 3;
  string host = 4;
  int32 port = 5;
  bool export_on = 6;
}

// Ответ сервиса
message ExportResponse {
  Export export = 1; // Ответ с экспортом (при создании или обновлении)
}
// Ответ сервиса
message ExportsResponse {
  repeated ListExport exports = 1; // Ответ с массивом экспортов (при получении всех)
}

// Запрос на создание экспорта
message CreateExportRequest {
  Export export = 1; // экспорт для создания
}

// Запрос на обновление экспорта
message UpdateExportRequest {
  Export export = 1; // Обновленные данные экспорта
}

// Запрос на получение информации о радаре по ID
message GetExportRequest {
  string id = 1; // Идентификатор радара
}

// Запрос на удаление радара по ID
message DeleteExportRequest {
  string id = 1; // Идентификатор радара
}

// Определение сервиса радара
service RadarService {
  rpc CreateRadar(CreateRadarRequest) returns (RadarResponse);
  rpc UpdateRadar(UpdateRadarRequest) returns (RadarResponse);
  rpc GetRadar(GetRadarRequest) returns (RadarResponse);
  rpc GetAllRadars(google.protobuf.Empty) returns (RadarsResponse);
  rpc DeleteRadar(DeleteRadarRequest) returns (RadarResponse);

  rpc GetTimeZones(google.protobuf.Empty) returns (TimeZonesResponse);
  rpc GetRadarModels(google.protobuf.Empty) returns (RadarModelsResponse);

  rpc GetDevice(google.protobuf.Empty) returns (DeviceResponse);
  rpc UpdateDevice(UpdateDeviceRequest) returns (DeviceResponse);

  rpc GetTransportObjectInfo(GetTransportObjectInfoRequest) returns (GetTransportObjectInfoResponse);

  rpc GetExportsTypes(google.protobuf.Empty) returns (GetExportTypesResponse);
  rpc GetExportStatuses(google.protobuf.Empty) returns (GetExportStatusesResponse);

  rpc CreateExport(CreateExportRequest) returns (ExportResponse);
  rpc UpdateExport(UpdateExportRequest) returns (ExportResponse);
  rpc GetExport(GetExportRequest) returns (ExportResponse);
  rpc GetAllExports(google.protobuf.Empty) returns (ExportsResponse);
  rpc DeleteExport(DeleteExportRequest) returns (ExportResponse);
}
